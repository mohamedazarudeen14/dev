//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BillingApplicationUserInterface.CustomerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDetail", Namespace="http://schemas.datacontract.org/2004/07/CommonClasses")]
    [System.SerializableAttribute()]
    public partial class ProductDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> PurchaseProductDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> PurchaseProductDetails {
            get {
                return this.PurchaseProductDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseProductDetailsField, value) != true)) {
                    this.PurchaseProductDetailsField = value;
                    this.RaisePropertyChanged("PurchaseProductDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseProductDetail", Namespace="http://schemas.datacontract.org/2004/07/CommonClasses")]
    [System.SerializableAttribute()]
    public partial class PurchaseProductDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Customer_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Discount_PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Discounted_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Discounted_BillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BillingApplicationUserInterface.CustomerService.ProductDetail ProductDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_Bill_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long purchaseProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer_Name {
            get {
                return this.Customer_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Customer_NameField, value) != true)) {
                    this.Customer_NameField = value;
                    this.RaisePropertyChanged("Customer_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discount_Percentage {
            get {
                return this.Discount_PercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.Discount_PercentageField, value) != true)) {
                    this.Discount_PercentageField = value;
                    this.RaisePropertyChanged("Discount_Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Discounted_Amount {
            get {
                return this.Discounted_AmountField;
            }
            set {
                if ((this.Discounted_AmountField.Equals(value) != true)) {
                    this.Discounted_AmountField = value;
                    this.RaisePropertyChanged("Discounted_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Discounted_Bill {
            get {
                return this.Discounted_BillField;
            }
            set {
                if ((this.Discounted_BillField.Equals(value) != true)) {
                    this.Discounted_BillField = value;
                    this.RaisePropertyChanged("Discounted_Bill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BillingApplicationUserInterface.CustomerService.ProductDetail ProductDetail {
            get {
                return this.ProductDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDetailField, value) != true)) {
                    this.ProductDetailField = value;
                    this.RaisePropertyChanged("ProductDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_Bill_Amount {
            get {
                return this.Total_Bill_AmountField;
            }
            set {
                if ((this.Total_Bill_AmountField.Equals(value) != true)) {
                    this.Total_Bill_AmountField = value;
                    this.RaisePropertyChanged("Total_Bill_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long purchaseProductID {
            get {
                return this.purchaseProductIDField;
            }
            set {
                if ((this.purchaseProductIDField.Equals(value) != true)) {
                    this.purchaseProductIDField = value;
                    this.RaisePropertyChanged("purchaseProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllProducts", ReplyAction="http://tempuri.org/ICustomerService/GetAllProductsResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail> GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllProducts", ReplyAction="http://tempuri.org/ICustomerService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail>> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CurrentCustomerPurchasedDetails", ReplyAction="http://tempuri.org/ICustomerService/CurrentCustomerPurchasedDetailsResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> CurrentCustomerPurchasedDetails(string customerChoice, int productID, int quantity, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CurrentCustomerPurchasedDetails", ReplyAction="http://tempuri.org/ICustomerService/CurrentCustomerPurchasedDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> CurrentCustomerPurchasedDetailsAsync(string customerChoice, int productID, int quantity, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AvailableProductsAfterCurrentPurchase", ReplyAction="http://tempuri.org/ICustomerService/AvailableProductsAfterCurrentPurchaseResponse" +
            "")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail> AvailableProductsAfterCurrentPurchase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AvailableProductsAfterCurrentPurchase", ReplyAction="http://tempuri.org/ICustomerService/AvailableProductsAfterCurrentPurchaseResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail>> AvailableProductsAfterCurrentPurchaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteProductFromCurrentPurchase", ReplyAction="http://tempuri.org/ICustomerService/DeleteProductFromCurrentPurchaseResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> DeleteProductFromCurrentPurchase(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteProductFromCurrentPurchase", ReplyAction="http://tempuri.org/ICustomerService/DeleteProductFromCurrentPurchaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> DeleteProductFromCurrentPurchaseAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/FinalBillForCurrentCustomer", ReplyAction="http://tempuri.org/ICustomerService/FinalBillForCurrentCustomerResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> FinalBillForCurrentCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/FinalBillForCurrentCustomer", ReplyAction="http://tempuri.org/ICustomerService/FinalBillForCurrentCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> FinalBillForCurrentCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/PurchasedProducts", ReplyAction="http://tempuri.org/ICustomerService/PurchasedProductsResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> PurchasedProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/PurchasedProducts", ReplyAction="http://tempuri.org/ICustomerService/PurchasedProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> PurchasedProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : BillingApplicationUserInterface.CustomerService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<BillingApplicationUserInterface.CustomerService.ICustomerService>, BillingApplicationUserInterface.CustomerService.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail> GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> CurrentCustomerPurchasedDetails(string customerChoice, int productID, int quantity, string customerName) {
            return base.Channel.CurrentCustomerPurchasedDetails(customerChoice, productID, quantity, customerName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> CurrentCustomerPurchasedDetailsAsync(string customerChoice, int productID, int quantity, string customerName) {
            return base.Channel.CurrentCustomerPurchasedDetailsAsync(customerChoice, productID, quantity, customerName);
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail> AvailableProductsAfterCurrentPurchase() {
            return base.Channel.AvailableProductsAfterCurrentPurchase();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.ProductDetail>> AvailableProductsAfterCurrentPurchaseAsync() {
            return base.Channel.AvailableProductsAfterCurrentPurchaseAsync();
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> DeleteProductFromCurrentPurchase(int productID) {
            return base.Channel.DeleteProductFromCurrentPurchase(productID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> DeleteProductFromCurrentPurchaseAsync(int productID) {
            return base.Channel.DeleteProductFromCurrentPurchaseAsync(productID);
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> FinalBillForCurrentCustomer() {
            return base.Channel.FinalBillForCurrentCustomer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> FinalBillForCurrentCustomerAsync() {
            return base.Channel.FinalBillForCurrentCustomerAsync();
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail> PurchasedProducts() {
            return base.Channel.PurchasedProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.CustomerService.PurchaseProductDetail>> PurchasedProductsAsync() {
            return base.Channel.PurchasedProductsAsync();
        }
    }
}
