//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BillingApplicationUserInterface.AdminService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDetail", Namespace="http://schemas.datacontract.org/2004/07/CommonClasses")]
    [System.SerializableAttribute()]
    public partial class ProductDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.PurchaseProductDetail> PurchaseProductDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.PurchaseProductDetail> PurchaseProductDetails {
            get {
                return this.PurchaseProductDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseProductDetailsField, value) != true)) {
                    this.PurchaseProductDetailsField = value;
                    this.RaisePropertyChanged("PurchaseProductDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseProductDetail", Namespace="http://schemas.datacontract.org/2004/07/CommonClasses")]
    [System.SerializableAttribute()]
    public partial class PurchaseProductDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Customer_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Discount_PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Discounted_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Discounted_BillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BillingApplicationUserInterface.AdminService.ProductDetail ProductDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_Bill_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long purchaseProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer_Name {
            get {
                return this.Customer_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Customer_NameField, value) != true)) {
                    this.Customer_NameField = value;
                    this.RaisePropertyChanged("Customer_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discount_Percentage {
            get {
                return this.Discount_PercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.Discount_PercentageField, value) != true)) {
                    this.Discount_PercentageField = value;
                    this.RaisePropertyChanged("Discount_Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Discounted_Amount {
            get {
                return this.Discounted_AmountField;
            }
            set {
                if ((this.Discounted_AmountField.Equals(value) != true)) {
                    this.Discounted_AmountField = value;
                    this.RaisePropertyChanged("Discounted_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Discounted_Bill {
            get {
                return this.Discounted_BillField;
            }
            set {
                if ((this.Discounted_BillField.Equals(value) != true)) {
                    this.Discounted_BillField = value;
                    this.RaisePropertyChanged("Discounted_Bill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BillingApplicationUserInterface.AdminService.ProductDetail ProductDetail {
            get {
                return this.ProductDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDetailField, value) != true)) {
                    this.ProductDetailField = value;
                    this.RaisePropertyChanged("ProductDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_Bill_Amount {
            get {
                return this.Total_Bill_AmountField;
            }
            set {
                if ((this.Total_Bill_AmountField.Equals(value) != true)) {
                    this.Total_Bill_AmountField = value;
                    this.RaisePropertyChanged("Total_Bill_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long purchaseProductID {
            get {
                return this.purchaseProductIDField;
            }
            set {
                if ((this.purchaseProductIDField.Equals(value) != true)) {
                    this.purchaseProductIDField = value;
                    this.RaisePropertyChanged("purchaseProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AvailableProductsInStore", ReplyAction="http://tempuri.org/IAdminService/AvailableProductsInStoreResponse")]
        System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.ProductDetail> AvailableProductsInStore();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AvailableProductsInStore", ReplyAction="http://tempuri.org/IAdminService/AvailableProductsInStoreResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.ProductDetail>> AvailableProductsInStoreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AdminValidation", ReplyAction="http://tempuri.org/IAdminService/AdminValidationResponse")]
        string AdminValidation(int userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AdminValidation", ReplyAction="http://tempuri.org/IAdminService/AdminValidationResponse")]
        System.Threading.Tasks.Task<string> AdminValidationAsync(int userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/NewProductsAddedByAdmin", ReplyAction="http://tempuri.org/IAdminService/NewProductsAddedByAdminResponse")]
        string NewProductsAddedByAdmin(BillingApplicationUserInterface.AdminService.ProductDetail productsAddingDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/NewProductsAddedByAdmin", ReplyAction="http://tempuri.org/IAdminService/NewProductsAddedByAdminResponse")]
        System.Threading.Tasks.Task<string> NewProductsAddedByAdminAsync(BillingApplicationUserInterface.AdminService.ProductDetail productsAddingDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DetailsOfNewProductsAddedToStore", ReplyAction="http://tempuri.org/IAdminService/DetailsOfNewProductsAddedToStoreResponse")]
        void DetailsOfNewProductsAddedToStore(int userID, BillingApplicationUserInterface.AdminService.ProductDetail productsAdded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DetailsOfNewProductsAddedToStore", ReplyAction="http://tempuri.org/IAdminService/DetailsOfNewProductsAddedToStoreResponse")]
        System.Threading.Tasks.Task DetailsOfNewProductsAddedToStoreAsync(int userID, BillingApplicationUserInterface.AdminService.ProductDetail productsAdded);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : BillingApplicationUserInterface.AdminService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<BillingApplicationUserInterface.AdminService.IAdminService>, BillingApplicationUserInterface.AdminService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.ProductDetail> AvailableProductsInStore() {
            return base.Channel.AvailableProductsInStore();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BillingApplicationUserInterface.AdminService.ProductDetail>> AvailableProductsInStoreAsync() {
            return base.Channel.AvailableProductsInStoreAsync();
        }
        
        public string AdminValidation(int userID, string password) {
            return base.Channel.AdminValidation(userID, password);
        }
        
        public System.Threading.Tasks.Task<string> AdminValidationAsync(int userID, string password) {
            return base.Channel.AdminValidationAsync(userID, password);
        }
        
        public string NewProductsAddedByAdmin(BillingApplicationUserInterface.AdminService.ProductDetail productsAddingDetails) {
            return base.Channel.NewProductsAddedByAdmin(productsAddingDetails);
        }
        
        public System.Threading.Tasks.Task<string> NewProductsAddedByAdminAsync(BillingApplicationUserInterface.AdminService.ProductDetail productsAddingDetails) {
            return base.Channel.NewProductsAddedByAdminAsync(productsAddingDetails);
        }
        
        public void DetailsOfNewProductsAddedToStore(int userID, BillingApplicationUserInterface.AdminService.ProductDetail productsAdded) {
            base.Channel.DetailsOfNewProductsAddedToStore(userID, productsAdded);
        }
        
        public System.Threading.Tasks.Task DetailsOfNewProductsAddedToStoreAsync(int userID, BillingApplicationUserInterface.AdminService.ProductDetail productsAdded) {
            return base.Channel.DetailsOfNewProductsAddedToStoreAsync(userID, productsAdded);
        }
    }
}
